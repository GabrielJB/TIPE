## Première Partie
Utilisation d'un algo dynamique pour trouver une trajectoire et les vitesses correspondantes dans un circuit discretisé.

Temps d'exécution moyens de l'algorithme:
	sur un circuit de taille 11 pour v_max = 5 (4 coups):
	164s
	169s
	171s
	175s
	175s
 	-> Environ 3 minutes (à essayer sur un autre ordinateur)
	sur un circuit de taille 11 pour v_max = 3 (6 coups):
	111s
	111s

Problèmes à résoudre:
- Choisir la vitesse max à chaque étape = optimal? (Contre-exemple?)

################     Théorie sur les métaheuristiques     ################

Métaheuristique:


Machine learning (ML):
	”is a field of artificial intelligence that uses statistical techniques to give computer systems the ability to "learn" (e.g., progressively improve performance on a specific task) from data, without being explicitly programmed. [...] Machine learning explores the study and construction of algorithms that can learn from and make predictions on data – such algorithms overcome following strictly static program instructions by making data-driven predictions or decisions,through building a model from sample inputs.” (Wikipedia: https://en.wikipedia.org/wiki/Machine_learning )

Différence avec Deep Learning?

Algorithme génétique
	
Réseau de neurones


################     Théorie sur l'algorithme dynamique     ################

(Prouver que c'est optimal?)

Le principe d'optimalité de Bellman:
La programmation dynamique a été introduite en 1953 par Richard Bellman. Il suit le principe selon lequel un problème se résout en résolvant les sous problèmes dont il est composé.

Cette méthode est adaptée aux problèmes qui consistent à résoudre le même sous-problème plusieurs fois. (exm: suite de fibonacci)
La méthode peut être ascendante (on résout les sous-problèmes d'abord) ou descedante (l'algorithme est récursif mais les valeurs obtenues sont stockée au fur et à mesure: mémoïsation).
Ici l'algorithme est ascedant: on part des l'arrivée et on remonte le bout de circuit jusqu'au départ.


################     Autres méthodes     ################

Algorithme de colonies de fourmies (Ant Colony Optimization):
	Classe d'algorithmes. Métaheuristique basée sur le comportement des colonies de fourmies qui cherche un un chemin depuis leur colonie à une source de nourriture. Marco Dorigo 1990s, pour la recherche de chemins optimaux dans un graphe.
	Stigmergie: communication entre les individus par la modification de l'environnement (ici, dépot de phéromones)
	
	Problème pour l'appliquer ici: déplacement à vitesse constante, alors que dans notre modèle, la voiture peut accélérer.

Branch and bound
	Pour les problèmes d'optimisation dicrets. On explore un arbre dont les noeuds sont étiqueté par une parties de l'ensemble des solutions potentielles. Avant d'explorer le noeud, on estime des bornes d'optimalité des solution qui s'y trouvent. Si ces bornes n'offrent pas une meilleur solution que la meilleure valeur obtenue jusqu'à là, on n'explore pas le noeud.

Recuit simulé

Descente de gradient

Monte Carlo

No Free Lunch
